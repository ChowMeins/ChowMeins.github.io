import{a as We,t as De}from"../chunks/disclose-version.Dq0sCcJW.js";import"../chunks/legacy.CI7wVzwO.js";import{z as Xe,B as l,C as $e,D as a,G as t,F as e,I as ea,J as m,v as o,K as aa}from"../chunks/runtime.C54dylD5.js";import{e as n}from"../chunks/events.kKpztpXt.js";import{e as ta,i as sa,s as i}from"../chunks/attributes.BENIBPQD.js";import{i as ia}from"../chunks/lifecycle.BYGTvVDS.js";import{p as la}from"../chunks/props.BmALSADD.js";import{o as ra}from"../chunks/index-client.BXAvXOh2.js";var oa=De('<li class="w-fit h-full flex flex-col bg-white rounded-xl p-2"><img class="w-[64px] h-[64px] mx-auto"></li>'),ma=De(`<div class="full-page svelte-155r1xf"><div class="home-page svelte-155r1xf"><div class="profile svelte-155r1xf"><div class="w-full h-full flex row flex-wrap"><p class="w-full h-fit py-4 text-white font-semibold text-5xl text-center drop-shadow-md">Hello, I'm Jason. ðŸ‘‹</p> <img src="/hamster-camera.gif" class="profile-pic border-1 border-[#FFFFFF] rounded-full drop-shadow-xl svelte-155r1xf" alt="My IRL Pic"></div></div> <div class="intro svelte-155r1xf"><div class="w-full rounded-xl p-8 mx-auto"><p class="w-full h-fit mb-12 py-4 text-white text-[2rem] max-md:text-[1.5rem] max-sm:text-[20px] text-wrap font-semibold text-center drop-shadow-md">I am an aspiring Software Engineer with a passion for creating innovative and efficient software solutions. 
                    With a strong foundation in programming and a keen interest in tackling complex challenges, I strive to develop applications that are both functional and user-friendly.
                    My dedication to continuous learning and adaptability allows me to stay at the forefront of emerging technologies and contribute meaningfully to impactful projects.</p> <ul class="tech-stack gap-4 svelte-155r1xf"></ul></div></div></div> <div class="projects svelte-155r1xf"><div class="flex flex-col mt-16 max-xl:text-center"><h1 class="px-8 text-xl">Here's What I've Worked On!</h1> <h1 class="p-8 text-5xl font-semibold">Projects.</h1></div> <div class="grid grid-cols-3 gap-8 max-xl:grid-cols-1 px-8"><section class="w-full mx-auto flex flex-col p-4 gap-2 rounded-lg border-2 border-white"><h1 class="flex"><p class="text-[24px] font-semibold">PokeTracker</p> <ul class="flex gap-4 ml-auto"><li><a href="https://github.com/ChowMeins/PokeTracker" target="_blank"><img alt="GitHub" class="w-[32px] h-[32px]"></a></li> <li><a href="http://pkmn-tracker.vercel.app/" target="_blank"><img alt="GitHub" class="w-[32px] h-[32px]"></a></li></ul></h1> <img alt="PokeTracker Demo" class="w-fit max-xl:h-[320px]"> <p class="text-[18px] font-medium">A web application for PokÃ©mon enthusiasts to track their shiny hunting progress. 
                    Built with SvelteKit, TypeScript, Tailwind, and Firebase, it features real-time data management, optimized PokÃ©mon image loading via PokeAPI, EV tracking, and secure user authentication. 
                    With a responsive designed interface ensure a seamless experience for all platforms.</p> <ul class="flex gap-3 mt-auto ml-auto"><img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Svelte" title="Svelte"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="TypeScript" title="TypeScript"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Tailwind" title="Tailwind"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Firebase" title="Firebase"> <img class="w-[48px] h-fit my-auto" src="pokeapi.png" alt="PokeAPI" title="PokeAPI"></ul></section> <section class="w-full mx-auto flex flex-col p-4 gap-2 rounded-lg border-2 border-white"><h1 class="flex text-xl"><p class="text-[24px] font-semibold">Wizard101 Quiz Solver</p> <ul class="flex gap-4 ml-auto"><li><a href="https://github.com/ChowMeins/Wizard101-Quiz-Solver" target="_blank"><img alt="GitHub" class="w-[32px] h-[32px]"></a></li></ul></h1> <img alt="PokeTracker Demo" class="w-fit max-xl:h-[320px]"> <p class="text-[18px] font-medium">A Python script that allows users to automatically completed trivia for crowns (in-game currency). 
                    The Selenium package is used to automate web browser interactions to both click and navigate through the questions.
                    OpenAI's whisper (an automatic speech recognition system) allows us to bypass the reCAPTCHA verification pop-ups.
                    Using a bash script hosted on a Raspberry Pi, this program can be set to run daily.</p> <ul class="flex gap-3 mt-auto ml-auto"><img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Python" title="Python"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Raspberry Pi" title="Raspberry Pi"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Bash" title="Bash"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="OpenAI" title="OpenAI"></ul></section> <section class="w-full mx-auto flex flex-col p-4 gap-2 rounded-lg border-2 border-white"><h1 class="flex"><p class="text-[24px] font-semibold">Musi To YouTube Playlist Converter</p> <ul class="flex gap-4 ml-auto"><li><a href="https://github.com/ChowMeins/Musi-to-YouTube-Playlist" target="_blank"><img alt="GitHub" class="w-[32px] h-[32px]"></a></li></ul></h1> <img src="demos/MusiToYouTube.png" alt="Musi to YouTube playlist converter" class="w-fit max-xl:h-[320px]"> <p class="text-[18px] font-medium">A Python script that converts playlists from the mobile app Musi to YouTube.
                    Utilizes the following packages: Selenium to execute a headless chrome web driver, Beautiful Soup to scrape the YouTube links from the Musi URL,
                    and the YouTube API to create and insert the songs into a new playlist.</p> <ul class="flex gap-3 mt-auto ml-auto"><img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Python" title="Python"></ul></section> <section class="w-full mx-auto flex flex-col p-4 gap-2 rounded-lg border-2 border-white"><h1 class="flex text-xl font-semibold"><p>Pokemon Shiny Hunting Bot</p> <ul class="flex gap-4 ml-auto"><li><a href="https://github.com/ChowMeins/Pokemon-Shiny-Hunter-Bot" target="_blank"><img alt="GitHub" class="w-[32px] h-[32px]"></a></li></ul></h1> <img alt="Pokemon Shiny Hunting Bot Demo" class="w-fit max-xl:h-[320px]"> <p class="text-[18px] font-medium">A Python script that sends an Arduino commands in to operate a Nintendo 3DS to shiny hunt Pokemon.
                    Detection methods included image comparison with OpenCV/NumPy and photoresistor to detect light intensity, 
                    while servo motors press buttons to automate dialogue interactions and encounters.</p> <ul class="flex gap-3 mt-auto ml-auto"><img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Python" title="Python"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Arduino" title="Arduino"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="C++" title="C++"></ul></section> <section class="w-full mx-auto flex flex-col p-4 gap-2 rounded-lg border-2 border-white"><h1 class="flex text-xl font-semibold"><p>Comet Dash</p> <ul class="flex gap-4 ml-auto"><li><a href="https://github.com/ZaneLeBlanc/Team16Project" target="_blank"><img alt="GitHub" class="w-[32px] h-[32px]"></a></li></ul></h1> <img alt="PokeTracker Demo" class="w-fit max-xl:h-[320px]"> <p class="text-[18px] font-medium">A game made in Unity in the style of a infinite-runner. Implemented infinite-level generation, including dynamic road and terrain creation,
                    a custom jump function with realistic gravitational physics to enhance the car's movement and gameplay mechanics.
                    Optimized procedural generation for efficient performance, memory management, and smooth transitions between generated segments.</p> <ul class="flex gap-3 mt-auto ml-auto"><img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Unity" title="Unity"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="C#" title="C#"></ul></section> <section class="w-full mx-auto flex flex-col p-4 gap-2 rounded-lg border-2 border-white"><h1 class="flex text-xl font-semibold"><p>Aggregate Shopping Cart</p> <ul class="flex gap-4 ml-auto"><li><a href="https://github.com/ChosenQuill/uARexpert" target="_blank"><img alt="GitHub" class="w-[32px] h-[32px]"></a></li></ul></h1> <iframe class="w-full h-[320px]" src="https://www.youtube.com/embed/_V5PumrW9W8?si=E_mkklOrUBclv6du" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe> <p class="text-[18px] font-medium">Sponsored by uARExpert, the Aggregate Shopping Cart provides a seamless virtual shopping cart between users and experts alike using React, PostgreSQL, and Chakra UI. 
                    The shopping cart will aggregate and source products/services, configuring it to provide multiple rounds of review before the products are sourced. 
                    Main features include a user-friendly UI involving secure login functionality, account management capabilities, 
                    the ability to manage project pages, incorporation of shopping carts for each project page, and integration within a database.</p> <ul class="flex gap-3 mt-auto ml-auto"><img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="React" title="React"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="PostgreSQL" title="PostgreSQL"></ul></section> <section class="w-full mx-auto flex flex-col p-4 gap-2 rounded-lg border-2 border-white"><h1 class="flex text-xl font-semibold"><p>My Portfolio Website</p> <ul class="flex gap-4 ml-auto"><li><a href="https://github.com/ChowMeins/ChowMeins.github.io" target="_blank"><img alt="GitHub" class="w-[32px] h-[32px]"></a></li> <li><a href="https://chowmeins.github.io/"><img alt="Website" class="w-[32px] h-[32px]"></a></li></ul></h1> <img src="demos/PersonalPortfolio.png" alt="PokeTracker Demo" class="w-fit max-xl:h-[320px]"> <p class="text-[18px] font-medium">My personal website showcasing me! Includes things such as my portfolio, projects, and tools for my personal use that are public!</p> <ul class="flex gap-3 mt-auto ml-auto"><img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Svelte" title="Svelte"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Tailwind" title="Tailwind"> <img class="w-[32px] h-[32px] max-sm:w-[48px] max-sm:h-[48px]" alt="Supabase" title="Supabase"></ul></section></div></div></div>`);function fa(Ue,z){Xe(z,!1);let F=la(z,"data",8);const s=aa([[!1,"demos/PokeTracker_demo.png","demos/PokeTracker_demo.gif"],[!1,"demos/Wizard101.png","demos/Wizard101.gif"],[!1,"demos/PokemonShinyHuntingBot.png","demos/PokemonShinyHuntingBot.gif"],[!1,"demos/CometDash.png","demos/CometDash.gif"]]),r=new Map;F().publicUrls.forEach(p=>{const h=p.name.substring(0,p.name.length-4);r.set(h,p.publicUrl)}),ra(()=>{}),ia();var d=ma(),f=a(d),R=t(a(f),2),G=a(R),j=t(a(G),2);ta(j,5,()=>F().techStack,sa,(p,h)=>{var U=oa(),Be=a(U);l(()=>i(Be,"src",r.get(o(h)))),e(U),l(()=>i(Be,"alt",o(h))),We(p,U)}),e(j),e(G),e(R),e(f);var Y=t(f,2),O=t(a(Y),2),v=a(O),w=a(v),L=t(a(w),2),b=a(L),Q=a(b),ze=a(Q);l(()=>i(ze,"src",r.get("github_white"))),e(Q),e(b);var E=t(b,2),V=a(E),Fe=a(V);l(()=>i(Fe,"src",r.get("internet"))),e(V),e(E),e(L),e(w);var c=t(w,2),q=t(c,4),J=a(q);l(()=>i(J,"src",r.get("svelte")));var K=t(J,2);l(()=>i(K,"src",r.get("typescript")));var N=t(K,2);l(()=>i(N,"src",r.get("tailwind")));var Re=t(N,2);l(()=>i(Re,"src",r.get("firebase"))),ea(2),e(q),e(v);var _=t(v,2),y=a(_),Z=t(a(y),2),X=a(Z),$=a(X),Ge=a($);l(()=>i(Ge,"src",r.get("github_white"))),e($),e(X),e(Z),e(y);var x=t(y,2),ee=t(x,4),ae=a(ee);l(()=>i(ae,"src",r.get("python")));var te=t(ae,2);l(()=>i(te,"src",r.get("raspberryPi")));var se=t(te,2);l(()=>i(se,"src",r.get("bash")));var je=t(se,2);l(()=>i(je,"src",r.get("openAI"))),e(ee),e(_);var k=t(_,2),P=a(k),ie=t(a(P),2),le=a(ie),re=a(le),Ye=a(re);l(()=>i(Ye,"src",r.get("github_white"))),e(re),e(le),e(ie),e(P);var S=t(P,2),oe=t(S,4),Oe=a(oe);l(()=>i(Oe,"src",r.get("python"))),e(oe),e(k);var T=t(k,2),A=a(T),me=t(a(A),2),ne=a(me),pe=a(ne),Le=a(pe);l(()=>i(Le,"src",r.get("github_white"))),e(pe),e(ne),e(me),e(A);var u=t(A,2),ce=t(u,4),xe=a(ce);l(()=>i(xe,"src",r.get("python")));var ue=t(xe,2);l(()=>i(ue,"src",r.get("arduino")));var Qe=t(ue,2);l(()=>i(Qe,"src",r.get("c++"))),e(ce),e(T);var C=t(T,2),M=a(C),ge=t(a(M),2),he=a(ge),de=a(he),Ee=a(de);l(()=>i(Ee,"src",r.get("github_white"))),e(de),e(he),e(ge),e(M);var g=t(M,2),fe=t(g,4),ve=a(fe);l(()=>i(ve,"src",r.get("unity")));var Ve=t(ve,2);l(()=>i(Ve,"src",r.get("c_sharp"))),e(fe),e(C);var I=t(C,2),H=a(I),we=t(a(H),2),be=a(we),_e=a(be),qe=a(_e);l(()=>i(qe,"src",r.get("github_white"))),e(_e),e(be),e(we),e(H);var ye=t(H,6),ke=a(ye);l(()=>i(ke,"src",r.get("react")));var Je=t(ke,2);l(()=>i(Je,"src",r.get("postgresql"))),e(ye),e(I);var Pe=t(I,2),B=a(Pe),Se=t(a(B),2),W=a(Se),Te=a(W),Ke=a(Te);l(()=>i(Ke,"src",r.get("github_white"))),e(Te),e(W);var Ae=t(W,2),Ce=a(Ae),Ne=a(Ce);l(()=>i(Ne,"src",r.get("internet"))),e(Ce),e(Ae),e(Se),e(B);var D=t(B,2),Me=t(D,4),Ie=a(Me);l(()=>i(Ie,"src",r.get("svelte")));var He=t(Ie,2);l(()=>i(He,"src",r.get("tailwind")));var Ze=t(He,2);l(()=>i(Ze,"src",r.get("supabase"))),e(Me),e(Pe),e(O),e(Y),e(d),l(()=>{i(c,"src",o(s)[0][0]?o(s)[0][2]:o(s)[0][1]),i(x,"src",o(s)[1][0]?o(s)[1][2]:o(s)[1][1]),i(u,"src",o(s)[2][0]?o(s)[2][2]:o(s)[2][1]),i(g,"src",o(s)[3][0]?o(s)[3][2]:o(s)[3][1])}),n("mouseenter",c,()=>m(s,o(s)[0][0]=!0)),n("mouseleave",c,()=>m(s,o(s)[0][0]=!1)),n("mouseenter",x,()=>m(s,o(s)[1][0]=!0)),n("mouseleave",x,()=>m(s,o(s)[1][0]=!1)),n("mouseenter",S,()=>m(s,o(s)[0][0]=!0)),n("mouseleave",S,()=>m(s,o(s)[0][0]=!1)),n("mouseenter",u,()=>m(s,o(s)[2][0]=!0)),n("mouseleave",u,()=>m(s,o(s)[2][0]=!1)),n("mouseenter",g,()=>m(s,o(s)[3][0]=!0)),n("mouseleave",g,()=>m(s,o(s)[3][0]=!1)),n("mouseenter",D,()=>m(s,o(s)[2][0]=!0)),n("mouseleave",D,()=>m(s,o(s)[2][0]=!1)),We(Ue,d),$e()}export{fa as component};
